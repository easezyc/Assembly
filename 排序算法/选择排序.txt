stack   segment para stack 'stack'
        db      1024 dup (?)
stack   ends

data    segment para 'data'
data_buf  db  40,39,38,37,36,35,34,33,32,31
          db  30,29,28,27,26,25,24,23,22,21
          db  20,19,18,17,16,15,14,13,12,11
          db  10, 9, 8, 7, 6, 5, 4, 3, 2, 1
		  db  50,49,48,47,46,45,44,43,42,41
msg1      db  'Raw Data:', 0dh, 0ah, '$'
msg2      db  'Sorted Data:', 0dh, 0ah, '$'
data    ends

code    segment para 'code'
        assume cs:code, ds:data, es:data, ss:stack

main    proc far
start:
        push ds
        xor  ax, ax
        push ax
        mov ax, data
        mov ds, ax

        ; 显示原始数据
        lea  dx, msg1
        mov  ah, 09h
        int  21h
        call dispall     

		
		lea bx, msg1
		lea ax,data_buf
		sub bx,ax
		mov dl,bl
		mov  ah, 02h
        int  21h         ; 调用DOS功能，显示DL中的字符
		mov cx,offset masg1-offset data_buf
		mov dl, 50
		mov  ah, 02h
        int  21h         ; 调用DOS功能，显示DL中的字符
		
        ; 排序算法
		lea di,data_buf
		mov cx,32h
		cld
		call disp_sort

        ; 显示排序后数据
        lea  dx, msg2
        mov  ah, 09h
        int  21h
        call dispall     

        ret

main    endp
dispall proc near          ; 子程序功能: 显示DATA_BUF中的数据
        lea  si, data_buf
        mov  cx, 5
loop1:  push cx
        mov  cx, 10
loop2:
        lodsb
        call disp_al
        call disp_sp
        loop loop2
        call disp_cr
        pop  cx
        loop loop1
        call disp_cr
        ret
dispall endp
disp_al proc near        ; 子程序功能: 按16进制方式显示AL中的数值
        push cx
        mov  bl, al
        mov  dl, bl
        mov  cl, 4
        rol  dl, cl
        and  dl, 0fh     
        call disp4       ; 显示字节高4位
        mov  dl, bl
        and  dl, 0fh
        call disp4       ; 显示字节低4位
        pop  cx
        ret
disp_al endp

disp4   proc near        ; 子程序功能: 将DL中的4 bits数值用ASCII显示出来
        add  dl, 30h     ; 由数值转为对应的ASCII码
        cmp  dl, 3ah     ; 是'0'~'9'转ddd
        jb   ddd
        add  dl, 27h     ; 是'A'~'F'
ddd:    mov  ah, 02h
        int  21h         ; 调用DOS功能，显示DL中的字符
        ret
disp4   endp
disp_cr proc near        ; 子程序功能: 显示回车换行
        mov  ah, 02h
        mov  dl, 0dh
        int  21h
        mov  ah, 02h
        mov  dl, 0ah
        int  21h
        ret
disp_cr endp

disp_sp proc near        ; 子程序功能: 显示空格
        mov  ah, 02h
        mov  dl, ' '
        int  21h
        ret
disp_sp endp

disp_sort proc near
disploop:	
		push cx
		mov bl,[di]
		mov si,di
		push si
begin:  mov al,[si]
		
		cmp bl,al
		jc disp_mark
		mov bl,al
		pop ax
		push si
disp_mark:		
		inc si
		loop begin
		pop si
		mov al,[di]
		mov [di],bl
		mov [si],al		
		inc di
		pop cx
		loop disploop
		ret
disp_sort endp



code    ends

        end main